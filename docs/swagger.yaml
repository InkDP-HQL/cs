definitions:
  controller.AccountLoginRes:
    properties:
      account:
        type: string
      email:
        type: string
      id:
        type: string
      phone:
        type: string
      token:
        type: string
    type: object
  controller.DistributeInstanceParam:
    properties:
      files:
        items:
          type: string
        type: array
      id:
        type: string
      ip:
        type: string
    type: object
  controller.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  controller.HookData:
    properties:
      hook:
        type: string
    type: object
  controller.LogInfo:
    properties:
      createTime:
        description: 创建时间
        type: string
      id:
        description: id
        type: string
      message:
        description: 信息
        type: string
    type: object
  controller.ParamDeleteKeystore:
    properties:
      id:
        type: string
    type: object
  controller.ParamInstanceAction:
    properties:
      action:
        type: string
      id:
        type: string
      objectId:
        type: string
    type: object
  controller.ParamObjectDistributeHook:
    properties:
      code:
        type: integer
      data:
        description: Data        json.RawMessage `json:"data"`
        items:
          type: integer
        type: array
      elasped_time:
        type: integer
      id:
        type: string
      md5:
        type: string
      message:
        type: string
    type: object
  controller.ParamObjectHearHook:
    properties:
      id:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  controller.ParamRegisterObject:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  controller.ParcelInfo:
    properties:
      checked:
        type: boolean
      children:
        type: object
      id:
        type: string
      spread:
        type: object
      title:
        type: string
      url:
        type: string
    type: object
  controller.Response:
    properties:
      message:
        type: string
    type: object
  controller.ResponseAllTag:
    properties:
      category:
        items:
          type: string
        type: array
      group:
        items:
          type: string
        type: array
      level:
        items:
          type: string
        type: array
    type: object
  controller.ResponseGetDistributeProgress:
    properties:
      data:
        items:
          $ref: '#/definitions/controller.distributeInfo'
        type: array
      progress:
        type: integer
    type: object
  controller.ResponseParcelUse:
    properties:
      allNum:
        type: integer
      createTime:
        type: string
      downloadNum:
        type: integer
      id:
        type: string
      installNum:
        type: integer
      instances:
        items:
          $ref: '#/definitions/controller.instance'
        type: array
      message:
        type: string
      name:
        type: string
      runNum:
        type: integer
      url:
        type: string
    type: object
  controller.distributeInfo:
    properties:
      file:
        type: string
      id:
        type: string
      ip:
        type: string
      message:
        type: string
      progress:
        type: integer
      status:
        type: string
    type: object
  controller.instance:
    properties:
      id:
        type: string
      message:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  model.Conf:
    properties:
      agent:
        properties:
          port:
            type: integer
        type: object
      filebeat:
        properties:
          inputs:
            items:
              type: string
            type: array
          output:
            type: string
        type: object
      id:
        type: string
      objectId:
        type: string
      parcel:
        properties:
          account:
            type: string
          password:
            type: string
          url:
            type: string
        type: object
      ssh:
        properties:
          account:
            type: string
          password:
            type: string
          port:
            type: integer
        type: object
      userId:
        type: string
    type: object
  model.Instance:
    properties:
      id:
        type: string
      ip:
        type: string
      md5:
        type: string
      message:
        description: 状态信息
        type: string
      name:
        type: string
      objectId:
        description: 对象id
        type: string
      status:
        description: register | unregister  | runing | error
        type: string
      type:
        description: controller | collector
        type: string
      userId:
        description: 用户id
        type: string
      version:
        type: string
    type: object
  model.Keystore:
    properties:
      account:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      userId:
        type: string
    type: object
  model.Members:
    properties:
      account:
        type: string
      email:
        type: string
      id:
        type: string
      key:
        type: string
      parcel:
        description: 存储库信息
        type: string
      password:
        type: string
      phone:
        type: string
      secret:
        type: string
    type: object
  model.Object:
    properties:
      category:
        type: string
      group:
        type: string
      id:
        type: string
      ip:
        type: string
      level:
        type: string
      message:
        type: string
      name:
        type: string
      register:
        type: boolean
      sshAccount:
        type: string
      sshPassword:
        type: string
      sshPort:
        type: integer
      status:
        type: string
      userId:
        type: string
    type: object
  model.Tag:
    properties:
      id:
        type: string
      name:
        type: string
      popular:
        type: boolean
      type:
        type: string
      userId:
        type: string
    type: object
host: "8080"
info:
  contact: {}
  title: backend_server
  version: "1.0"
paths:
  /login:
    post:
      parameters:
      - description: member
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.Members'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.AccountLoginRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 登录
      tags:
      - 默认
  /member:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Members'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 用户存储库信息
      tags:
      - 默认
  /object:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: tags
        in: query
        name: tags
        type: string
      - description: tags
        in: query
        name: tags[]
        type: string
      - description: tags
        in: query
        name: register
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Object'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 对象列表
      tags:
      - object
    post:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: object
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.Object'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 添加对象
      tags:
      - object
    put:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ParamRegisterObject
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controller.ParamRegisterObject'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 注册对象
      tags:
      - object
  /object/conf:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Conf'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 获取配置信息
      tags:
      - object
    post:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: conf
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.Conf'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 更新配置
      tags:
      - object
  /object/distribute:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseGetDistributeProgress'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 获取分发进度
      tags:
      - object
    post:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: 分配实例参数
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controller.DistributeInstanceParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.HookData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 分发文件
      tags:
      - object
  /object/distribute/hook:
    post:
      consumes:
      - application/json
      parameters:
      - description: ParamObjectDistributeHook
        in: body
        name: accept
        required: true
        schema:
          $ref: '#/definitions/controller.ParamObjectDistributeHook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 对象分发回调
      tags:
      - object
  /object/heart:
    post:
      parameters:
      - description: ParamObjectHearHook
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controller.ParamObjectHearHook'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 回调心跳信息
      tags:
      - object
  /object/instance:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: objectId
        in: query
        name: objectId
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: popular
        in: query
        name: popular
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Instance'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 实例列表
      tags:
      - object
  /object/instance/action:
    post:
      consumes:
      - application/json
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ParamInstanceAction
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controller.ParamInstanceAction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 实例操作
      tags:
      - object
  /object/log:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: highlight
        in: query
        name: highlight
        type: string
      - description: 开始时间
        in: query
        name: startTime
        type: string
      - description: 结束时间
        in: query
        name: endTime
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.LogInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 数据
      tags:
      - object
  /parcel:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.ParcelInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 存储库文件信息
      tags:
      - parcel
  /parcel/use:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/controller.ResponseParcelUse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 存储库文件分发情况
      tags:
      - parcel
  /register:
    post:
      parameters:
      - description: member
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.Members'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: 注册
      tags:
      - 默认
  /tag:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: name
        in: query
        name: name
        type: string
      - description: type
        in: query
        name: type
        type: string
      - description: popular
        in: query
        name: popular
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tag'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 请求标签列表
      tags:
      - tag
    post:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: tag
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.Tag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 注册对象
      tags:
      - tag
  /tag/all:
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.ResponseAllTag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 所有标签
      tags:
      - tag
  /user/keystore:
    delete:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ParamDeleteKeystore
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/controller.ParamDeleteKeystore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 删除密码对
      tags:
      - user
    get:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Keystore'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 密码对列表
      tags:
      - user
    post:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Keystore
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.Keystore'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 密码对
      tags:
      - user
    put:
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 修改密码对
      tags:
      - user
swagger: "2.0"
